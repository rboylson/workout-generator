{"ast":null,"code":"var _jsxFileName = \"/Users/rachel/workout-generator/src/components/ExerciseGrid.js\",\n    _s = $RefreshSig$();\n\nimport './ExerciseGrid.scss';\nimport { useEffect, useState } from 'react';\nimport DataGrid, { SortableHeaderCell } from 'react-data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExerciseGrid() {\n  _s();\n\n  const columns = [{\n    key: 'id',\n    name: 'ID'\n  }, {\n    key: 'name',\n    name: 'Name'\n  }, {\n    key: 'type',\n    name: 'Type'\n  }, {\n    key: 'timing',\n    name: 'Timing'\n  }, {\n    key: 'target',\n    name: 'Target'\n  }];\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3000/workouts').then(response => response.json()).then(setList);\n  }, []);\n  const onEditComplete = useCallback(({\n    value,\n    columnId,\n    rowIndex\n  }) => {\n    const myData = [...data];\n    myData[rowIndex][columnId] = value;\n    setList(myData);\n  }, [list]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ExerciseGrid\",\n    children: [/*#__PURE__*/_jsxDEV(SortableHeaderCell, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataGrid, {\n      columns: columns,\n      rows: list,\n      editable: true,\n      onEditComplete: onEditComplete,\n      enableCellSelect: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExerciseGrid, \"bloIAdlL2DZm4nHEocNoCmSJbs0=\");\n\n_c = ExerciseGrid;\nexport default ExerciseGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExerciseGrid\");","map":{"version":3,"sources":["/Users/rachel/workout-generator/src/components/ExerciseGrid.js"],"names":["useEffect","useState","DataGrid","SortableHeaderCell","ExerciseGrid","columns","key","name","list","setList","fetch","then","response","json","onEditComplete","useCallback","value","columnId","rowIndex","myData","data"],"mappings":";;;AAAA,OAAO,qBAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,QAAP,IAAmBC,kBAAnB,QAA8C,iBAA9C;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AAEtB,QAAMC,OAAO,GAAG,CACd;AAAEC,IAAAA,GAAG,EAAE,IAAP;AAAaC,IAAAA,IAAI,EAAE;AAAnB,GADc,EAEd;AAAED,IAAAA,GAAG,EAAE,MAAP;AAAeC,IAAAA,IAAI,EAAE;AAArB,GAFc,EAGd;AAAED,IAAAA,GAAG,EAAE,MAAP;AAAeC,IAAAA,IAAI,EAAE;AAArB,GAHc,EAId;AAAED,IAAAA,GAAG,EAAE,QAAP;AAAiBC,IAAAA,IAAI,EAAE;AAAvB,GAJc,EAKd;AAAED,IAAAA,GAAG,EAAE,QAAP;AAAiBC,IAAAA,IAAI,EAAE;AAAvB,GALc,CAAhB;AAQA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACZU,IAAAA,KAAK,CAAC,gCAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQF,OAFR;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,QAAMK,cAAc,GAAGC,WAAW,CAAC,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,GAAD,KAAmC;AACpE,UAAMC,MAAM,GAAG,CAAC,GAAGC,IAAJ,CAAf;AACAD,IAAAA,MAAM,CAACD,QAAD,CAAN,CAAiBD,QAAjB,IAA6BD,KAA7B;AAEAP,IAAAA,OAAO,CAACU,MAAD,CAAP;AACD,GALiC,EAK/B,CAACX,IAAD,CAL+B,CAAlC;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAGK,QAAC,QAAD;AACC,MAAA,OAAO,EAAEH,OADV;AAEC,MAAA,IAAI,EAAEG,IAFP;AAGC,MAAA,QAAQ,MAHT;AAIC,MAAA,cAAc,EAAEM,cAJjB;AAKC,MAAA,gBAAgB,EAAE;AALnB;AAAA;AAAA;AAAA;AAAA,YAHL;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAtCQV,Y;;KAAAA,Y;AAwCT,eAAeA,YAAf","sourcesContent":["import './ExerciseGrid.scss';\nimport { useEffect, useState } from 'react';\nimport DataGrid, { SortableHeaderCell }  from 'react-data-grid';\n\nfunction ExerciseGrid() {\n\n  const columns = [\n    { key: 'id', name: 'ID' },\n    { key: 'name', name: 'Name' },\n    { key: 'type', name: 'Type' },\n    { key: 'timing', name: 'Timing' },\n    { key: 'target', name: 'Target' }\n  ];\n\n  const [list, setList] = useState([]);\n\n  useEffect(()=>{\n    fetch('http://localhost:3000/workouts')\n      .then(response => response.json())\n      .then(setList);\n  }, []);\n\n  const onEditComplete = useCallback(({ value, columnId, rowIndex }) => {\n    const myData = [...data];\n    myData[rowIndex][columnId] = value;\n\n    setList(myData)\n  }, [list]);\n\n  return (\n    <div className=\"ExerciseGrid\">\n      <SortableHeaderCell />\n\n         <DataGrid \n          columns={columns} \n          rows={list} \n          editable\n          onEditComplete={onEditComplete}\n          enableCellSelect={true}\n        />\n    </div>\n  );\n}\n\nexport default ExerciseGrid;\n"]},"metadata":{},"sourceType":"module"}