{"ast":null,"code":"var _jsxFileName = \"/Users/rachel/workout-generator/src/components/WorkoutGenerator.js\",\n    _s = $RefreshSig$();\n\nimport { Route, Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Button, Select, Text, TextInput } from 'grommet';\nimport './WorkoutGenerator.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WorkoutGenerator() {\n  _s();\n\n  let options = [\"Stretch\", \"Exercise\"];\n  let typeExercises = [];\n  let targetExercises = [];\n  const [workoutTypeInput, setWorkoutTypeInput] = useState('');\n  const [workoutTargetInput, setWorkoutTargetInput] = useState('');\n  const [workoutRepsInput, setWorkoutRepsInput] = useState('');\n  const [type, setType] = useState([]);\n  const [targets, setTarget] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3000/types').then(response => response.json()).then(setType);\n  }, []);\n  useEffect(() => {\n    fetch('http://localhost:3000/target').then(response => response.json()).then(setTarget);\n  }, []);\n  type.map((element, index) => {\n    return typeExercises[index] = element.name;\n  });\n  targets.map((element, index) => {\n    return targetExercises[index] = element.name;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"workout-generator\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/list\",\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        size: \"large\",\n        children: \"\\u2699\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Generate Workout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"workout-generator-form\",\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        className: \"workout-select\",\n        placeholder: \"Exercise Type\",\n        multiple: true,\n        closeOnChange: false,\n        options: options // onChange={({ value: nextValue }) => setValue(nextValue)}\n        // value={workoutTypeInput}\n        ,\n        onChange: event => setWorkoutTypeInput(event.value) // onChange={event => setWorkoutTypeInputOptions(event)}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        className: \"workout-input\",\n        placeholder: \"Exercise Target\",\n        value: workoutTargetInput,\n        onSelect: event => setWorkoutTargetInput(event.suggestion),\n        suggestions: targetExercises\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        className: \"workout-input\",\n        placeholder: \"Reps\",\n        value: workoutRepsInput,\n        onChange: event => setWorkoutRepsInput(event.target.value),\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        render: ({\n          history\n        }) => /*#__PURE__*/_jsxDEV(Button, {\n          className: \"workout-input\",\n          label: \"Start Workout\",\n          onClick: () => {\n            history.push({\n              pathname: '/start',\n              state: {\n                workoutType: workoutTypeInput,\n                workoutTarget: workoutTargetInput,\n                workoutReps: workoutRepsInput\n              }\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WorkoutGenerator, \"NkwscM4D2eYUtLcycUwASnr1GVc=\");\n\n_c = WorkoutGenerator;\nexport default WorkoutGenerator;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkoutGenerator\");","map":{"version":3,"sources":["/Users/rachel/workout-generator/src/components/WorkoutGenerator.js"],"names":["Route","Link","useEffect","useState","Button","Select","Text","TextInput","WorkoutGenerator","options","typeExercises","targetExercises","workoutTypeInput","setWorkoutTypeInput","workoutTargetInput","setWorkoutTargetInput","workoutRepsInput","setWorkoutRepsInput","type","setType","targets","setTarget","fetch","then","response","json","map","element","index","name","event","value","suggestion","target","history","push","pathname","state","workoutType","workoutTarget","workoutReps"],"mappings":"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","sourcesContent":["import { Route, Link } from 'react-router-dom'\nimport { useEffect, useState } from 'react';\nimport { Button, Select, Text, TextInput } from 'grommet';\nimport './WorkoutGenerator.scss';\n\n\nfunction WorkoutGenerator() {\n\n  let options = [\"Stretch\", \"Exercise\"];\n\n  let typeExercises = [];\n  let targetExercises = [];\n  const [workoutTypeInput, setWorkoutTypeInput] = useState('');\n  const [workoutTargetInput, setWorkoutTargetInput] = useState('');\n  const [workoutRepsInput, setWorkoutRepsInput] = useState('');\n  const [type, setType] = useState([]);\n  const [targets, setTarget] = useState([]);\n\n  useEffect(()=>{\n    fetch('http://localhost:3000/types')\n      .then(response => response.json())\n      .then(setType);\n  }, []);\n\n  useEffect(()=>{\n    fetch('http://localhost:3000/target')\n      .then(response => response.json())\n      .then(setTarget);\n  }, []);\n  \n  type.map((element, index) => {\n    return typeExercises[index] = element.name;\n  });  \n  \n  targets.map((element, index) => {\n    return targetExercises[index] = element.name;\n  });\n\n\n\n  return (\n    <div className=\"workout-generator\">\n      <Link to='/list'>\n        <Text size=\"large\">âš™</Text>\n      </Link>  \n\n      <h1>Generate Workout</h1>\n\n      <div className=\"workout-generator-form\">\n      \n        <Select\n          className=\"workout-select\"\n          placeholder=\"Exercise Type\"\n          multiple\n          closeOnChange={false}\n          options={options}\n          // onChange={({ value: nextValue }) => setValue(nextValue)}\n          // value={workoutTypeInput}\n          onChange={event => setWorkoutTypeInput(event.value)}\n          // onChange={event => setWorkoutTypeInputOptions(event)}\n        />       \n\n        <TextInput\n          className=\"workout-input\"\n          placeholder=\"Exercise Target\"\n          value={workoutTargetInput}\n          onSelect={event => setWorkoutTargetInput(event.suggestion)}\n          suggestions={targetExercises}\n        />\n\n        <TextInput \n          className=\"workout-input\"\n          placeholder=\"Reps\" \n          value={workoutRepsInput}\n          onChange={event => setWorkoutRepsInput(event.target.value)}\n          type=\"number\"\n        />\n\n        <Route render={({ history }) => (\n          <Button\n            className=\"workout-input\"\n            label=\"Start Workout\" \n            onClick={() => { \n                history.push( {\n                  pathname: '/start',\n                  state: { \n                    workoutType: workoutTypeInput, \n                    workoutTarget: workoutTargetInput, \n                    workoutReps: workoutRepsInput }\n                });\n              }} >\n            </Button>\n          )} \n        />\n      </div>\n    </div>\n  );\n}\n\nexport default WorkoutGenerator;"]},"metadata":{},"sourceType":"module"}