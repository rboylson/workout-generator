{"ast":null,"code":"var _jsxFileName = \"/Users/rachel/workout-generator/src/components/Workout.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Workout(props) {\n  _s();\n\n  console.log(\"rendered\");\n  const {\n    state\n  } = useLocation();\n  const {\n    workoutType,\n    workoutTarget,\n    workoutReps\n  } = state;\n  const [query, setQuery] = useState([]);\n  const [workoutArray, setWorkoutArray] = useState([]);\n  let url = `http://localhost:3000/workouts?type=${workoutType}&target=${workoutTarget}`;\n  useEffect(() => {\n    fetch(url).then(response => response.json()).then(setQuery);\n  }, [url]);\n\n  for (var j = 0; j < query.length; j++) {\n    workoutArray[j] = { ...query[j],\n      \"count\": \"0\"\n    };\n  }\n\n  for (var i = 0; i < workoutReps; i++) {\n    let randomNumber = Math.floor(Math.random() * workoutArray.length);\n\n    if (workoutArray[randomNumber] != null) {\n      workoutArray[randomNumber].count++;\n    }\n  }\n\n  let WorkoutList = () => {\n    setWorkoutArray(workoutArray);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: workoutArray.map(item => {\n        if (item) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [item.name, \" : \", item.timing, \" : \", item.count, \"x\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: \"vehicle1\",\n              name: \"vehicle1\",\n              value: \"Bike\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"vehicle1\",\n              children: \" I have a bike\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 63\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(WorkoutList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Workout, \"YbPtbFMPR/If1ClnqE8nMNIqEjk=\", false, function () {\n  return [useLocation];\n});\n\n_c = Workout;\nexport default Workout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Workout\");","map":{"version":3,"sources":["/Users/rachel/workout-generator/src/components/Workout.js"],"names":["useEffect","useState","useLocation","Workout","props","console","log","state","workoutType","workoutTarget","workoutReps","query","setQuery","workoutArray","setWorkoutArray","url","fetch","then","response","json","j","length","i","randomNumber","Math","floor","random","count","WorkoutList","map","item","name","timing"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,SAASC,OAAT,CAAkBC,KAAlB,EAA0B;AAAA;;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AAEA,QAAM;AAACC,IAAAA;AAAD,MAAUL,WAAW,EAA3B;AACA,QAAM;AAACM,IAAAA,WAAD;AAAcC,IAAAA,aAAd;AAA6BC,IAAAA;AAA7B,MAA6CH,KAAnD;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,EAAD,CAAhD;AAEA,MAAIc,GAAG,GAAI,uCAAsCP,WAAY,WAAUC,aAAc,EAArF;AACAT,EAAAA,SAAS,CAAC,MAAI;AACZgB,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQL,QAFR;AAGD,GAJQ,EAIN,CAACG,GAAD,CAJM,CAAT;;AAMA,OAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,KAAK,CAACU,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrCP,IAAAA,YAAY,CAACO,CAAD,CAAZ,GAAkB,EAAC,GAAGT,KAAK,CAACS,CAAD,CAAT;AAAc,eAAS;AAAvB,KAAlB;AACD;;AAED,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,WAApB,EAAiCY,CAAC,EAAlC,EAAsC;AACpC,QAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAiBb,YAAY,CAACQ,MAAzC,CAAnB;;AACA,QAAIR,YAAY,CAACU,YAAD,CAAZ,IAA8B,IAAlC,EAAwC;AACtCV,MAAAA,YAAY,CAACU,YAAD,CAAZ,CAA2BI,KAA3B;AACD;AACF;;AAED,MAAIC,WAAW,GAAG,MAAM;AACtBd,IAAAA,eAAe,CAACD,YAAD,CAAf;AACA,wBACE;AAAA,gBAEIA,YAAY,CAACgB,GAAb,CAAkBC,IAAD,IAAU;AACzB,YAAIA,IAAJ,EAAU;AACR,8BACE;AAAA,oCACE;AAAA,yBAAKA,IAAI,CAACC,IAAV,SAAmBD,IAAI,CAACE,MAAxB,SAAmCF,IAAI,CAACH,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAO,cAAA,IAAI,EAAC,UAAZ;AAAuB,cAAA,EAAE,EAAC,UAA1B;AAAqC,cAAA,IAAI,EAAC,UAA1C;AAAqD,cAAA,KAAK,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAO,cAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAG8C;AAAA;AAAA;AAAA;AAAA,oBAH9C;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAOD;AACF,OAVD;AAFJ;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD,GAnBD;;AAqBA,sBACE;AAAA,2BACE;AAAA,6BAAO,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GApDQxB,O;UAGSD,W;;;KAHTC,O;AAsDT,eAAeA,OAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nfunction Workout( props ) {\n  console.log(\"rendered\");\n\n  const {state} = useLocation();\n  const {workoutType, workoutTarget, workoutReps } = state;\n  const [query, setQuery] = useState([]);\n  const [workoutArray, setWorkoutArray] = useState([]);\n  \n  let url = `http://localhost:3000/workouts?type=${workoutType}&target=${workoutTarget}`;\n  useEffect(()=>{\n    fetch(url)\n      .then(response => response.json())\n      .then(setQuery);\n  }, [url]);\n\n  for (var j = 0; j < query.length; j++) {\n    workoutArray[j] = {...query[j], \"count\": \"0\"};\n  }\n\n  for (var i = 0; i < workoutReps; i++) {\n    let randomNumber = Math.floor(Math.random() * (workoutArray.length));\n    if (workoutArray[randomNumber] != null) {\n      workoutArray[randomNumber].count++;\n    }\n  } \n\n  let WorkoutList = () => { \n    setWorkoutArray(workoutArray);\n    return (\n      <div>\n        {\n          workoutArray.map((item) => {\n            if (item) {\n              return (\n                <div>\n                  <li>{item.name} : {item.timing} : {item.count}x</li>\n                  <input type=\"checkbox\" id=\"vehicle1\" name=\"vehicle1\" value=\"Bike\" />\n                  <label for=\"vehicle1\"> I have a bike</label><br></br>\n                </div>\n              )\n            }\n          })\n        }\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <div>{ <WorkoutList /> }</div>\n    </div>\n  );\n}\n\nexport default Workout;\n"]},"metadata":{},"sourceType":"module"}