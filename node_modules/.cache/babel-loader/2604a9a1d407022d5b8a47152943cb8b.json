{"ast":null,"code":"var _jsxFileName = \"/Users/rachel/workout-generator/src/components/WorkoutGenerator.js\",\n    _s2 = $RefreshSig$();\n\nimport { Route } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WorkoutGenerator() {\n  _s2();\n\n  const [type, setType] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3000/types').then(response => response.json()).then(setType);\n  }, []);\n  const [targets, setTarget] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3000/target').then(response => response.json()).then(setTarget);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"workout-generator\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Generate Workout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"workoutType\",\n        className: \"inputType\",\n        name: \"workoutType\",\n        children: type.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.name,\n          children: item.name\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"workoutTarget\",\n        className: \"inputTarget\",\n        name: \"workoutTarget\",\n        children: targets.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.name,\n          children: item.name\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"reps\",\n        id: \"workoutTiming\",\n        className: \"inputTiming\",\n        name: \"workoutTiming\",\n        placeholder: \"Reps\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      render: ({\n        history\n      }) => {\n        var _s = $RefreshSig$();\n\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: _s(() => {\n            _s();\n\n            let workoutType = document.querySelector(\"#workoutType\").value;\n            let workoutTarget = document.querySelector(\"#workoutTarget\").value;\n            let workoutReps = document.querySelector(\"#workoutTiming\").value;\n\n            if (workoutReps === \"\") {\n              workoutReps = \"12\";\n            }\n\n            const [query, setQuery] = useState([]);\n            let url = `http://localhost:3000/workouts?type=${workoutType}&target=${workoutTarget}`;\n            useEffect(() => {\n              fetch(url).then(response => response.json()).then(setQuery);\n            }, [url]);\n            let workoutArray = [];\n\n            for (var i = 0; i < workoutReps; i++) {\n              let randomNumber = Math.floor(Math.random() * workoutArray.length + 1); // console.log(randomNumber);\n\n              workoutArray.push(query[randomNumber]);\n            }\n\n            history.push({\n              pathname: '/start',\n              state: workoutArray\n            });\n          }, \"HpUJiEjqm+XU7tLZGUMy5+xcEUg=\"),\n          children: \"Start Workout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(WorkoutGenerator, \"Z42eTa+zSGzvLsupVP/c9zURCuQ=\");\n\n_c = WorkoutGenerator;\nexport default WorkoutGenerator;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkoutGenerator\");","map":{"version":3,"sources":["/Users/rachel/workout-generator/src/components/WorkoutGenerator.js"],"names":["Route","useEffect","useState","WorkoutGenerator","type","setType","fetch","then","response","json","targets","setTarget","map","item","name","id","history","workoutType","document","querySelector","value","workoutTarget","workoutReps","query","setQuery","url","workoutArray","i","randomNumber","Math","floor","random","length","push","pathname","state"],"mappings":"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","sourcesContent":["import { Route } from 'react-router-dom'\nimport { useEffect, useState } from 'react';\n\n\nfunction WorkoutGenerator() {\n\n\n\n  const [type, setType] = useState([]);\n  useEffect(()=>{\n    fetch('http://localhost:3000/types')\n      .then(response => response.json())\n      .then(setType);\n  }, []);\n\n  const [targets, setTarget] = useState([]);\n  useEffect(()=>{\n    fetch('http://localhost:3000/target')\n      .then(response => response.json())\n      .then(setTarget);\n  }, []);\n\n  return (\n    <div className=\"workout-generator\">\n      <h2>Generate Workout</h2>\n\n      <form autoComplete=\"off\">\n        <select id=\"workoutType\" className=\"inputType\"  name=\"workoutType\">\n          {type.map(item =>\n            <option key={item.id} value={item.name}>{item.name}</option>\n          )}\n        </select>\n        <select id=\"workoutTarget\" className=\"inputTarget\" name=\"workoutTarget\">\n          {targets.map(item =>\n            <option key={item.id} value={item.name}>{item.name}</option>\n          )}\n        </select>\n        <input type=\"reps\" id=\"workoutTiming\" className=\"inputTiming\" name=\"workoutTiming\" placeholder=\"Reps\" />\n        \n      </form> \n      \n      <Route render={({ history }) => (\n        <button onClick={() => { \n            let workoutType = document.querySelector(\"#workoutType\").value;\n            let workoutTarget = document.querySelector(\"#workoutTarget\").value;\n            let workoutReps = document.querySelector(\"#workoutTiming\").value;\n            if (workoutReps === \"\" ) { workoutReps = \"12\" }\n\n            const [query, setQuery] = useState([]);\n          \n            let url = `http://localhost:3000/workouts?type=${workoutType}&target=${workoutTarget}`;\n            useEffect(()=>{\n              fetch(url)\n                .then(response => response.json())\n                .then(setQuery);\n            }, [url]);\n          \n            let workoutArray = [];\n          \n            for (var i = 0; i < workoutReps; i++) {\n              let randomNumber = Math.floor(Math.random() * workoutArray.length + 1);\n              // console.log(randomNumber);\n              workoutArray.push(query[randomNumber]);\n            } \n\n            history.push( {\n              pathname: '/start',\n              state: workoutArray\n            });\n          }} >\n          Start Workout\n        </button>\n      )} />\n      \n    </div>\n  );\n}\n\nexport default WorkoutGenerator;"]},"metadata":{},"sourceType":"module"}