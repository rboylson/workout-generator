{"ast":null,"code":"var _jsxFileName = \"/Users/rachel/workout-generator/src/components/ExerciseGrid.js\",\n    _s = $RefreshSig$();\n\nimport './ExerciseGrid.scss';\nimport { useEffect, useState, useCallback } from 'react';\nimport DataGrid from 'react-data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExerciseGrid() {\n  _s();\n\n  const columns = [{\n    key: 'id',\n    name: 'ID',\n    editable: true\n  }, {\n    key: 'name',\n    name: 'Name',\n    editable: true\n  }, {\n    key: 'type',\n    name: 'Type',\n    editable: true\n  }, {\n    key: 'timing',\n    name: 'Timing',\n    editable: true\n  }, {\n    key: 'target',\n    name: 'Target',\n    editable: true\n  }];\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3000/workouts').then(response => response.json()).then(setList);\n  }, []);\n  const onEditComplete = useCallback(({\n    value,\n    columnId,\n    rowIndex\n  }) => {\n    console.log({\n      value\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ExerciseGrid\",\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      columns: columns,\n      rows: list,\n      onEditComplete: onEditComplete(props),\n      editable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExerciseGrid, \"bloIAdlL2DZm4nHEocNoCmSJbs0=\");\n\n_c = ExerciseGrid;\nexport default ExerciseGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExerciseGrid\");","map":{"version":3,"sources":["/Users/rachel/workout-generator/src/components/ExerciseGrid.js"],"names":["useEffect","useState","useCallback","DataGrid","ExerciseGrid","columns","key","name","editable","list","setList","fetch","then","response","json","onEditComplete","value","columnId","rowIndex","console","log","props"],"mappings":";;;AAAA,OAAO,qBAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,OAAOC,QAAP,MAAsB,iBAAtB;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AAEtB,QAAMC,OAAO,GAAG,CACd;AAAEC,IAAAA,GAAG,EAAE,IAAP;AAAaC,IAAAA,IAAI,EAAE,IAAnB;AAAyBC,IAAAA,QAAQ,EAAE;AAAnC,GADc,EAEd;AAAEF,IAAAA,GAAG,EAAE,MAAP;AAAeC,IAAAA,IAAI,EAAE,MAArB;AAA6BC,IAAAA,QAAQ,EAAE;AAAvC,GAFc,EAGd;AAAEF,IAAAA,GAAG,EAAE,MAAP;AAAeC,IAAAA,IAAI,EAAE,MAArB;AAA6BC,IAAAA,QAAQ,EAAE;AAAvC,GAHc,EAId;AAAEF,IAAAA,GAAG,EAAE,QAAP;AAAiBC,IAAAA,IAAI,EAAE,QAAvB;AAAiCC,IAAAA,QAAQ,EAAE;AAA3C,GAJc,EAKd;AAAEF,IAAAA,GAAG,EAAE,QAAP;AAAiBC,IAAAA,IAAI,EAAE,QAAvB;AAAiCC,IAAAA,QAAQ,EAAE;AAA3C,GALc,CAAhB;AAQA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACZW,IAAAA,KAAK,CAAC,gCAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQF,OAFR;AAGD,GAJQ,EAIN,EAJM,CAAT;AAUA,QAAMK,cAAc,GAAGb,WAAW,CAAC,CAAC;AAAEc,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,GAAD,KAAmC;AACpEC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACJ,MAAAA;AAAD,KAAZ;AACD,GAFiC,CAAlC;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BACK,QAAC,QAAD;AACC,MAAA,OAAO,EAAEX,OADV;AAEC,MAAA,IAAI,EAAEI,IAFP;AAGC,MAAA,cAAc,EAAGM,cAAc,CAACM,KAAD,CAHhC;AAIC,MAAA,QAAQ,EAAE;AAJX;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GArCQjB,Y;;KAAAA,Y;AAuCT,eAAeA,YAAf","sourcesContent":["import './ExerciseGrid.scss';\nimport { useEffect, useState, useCallback } from 'react';\nimport DataGrid  from 'react-data-grid';\n\nfunction ExerciseGrid() {\n\n  const columns = [\n    { key: 'id', name: 'ID', editable: true },\n    { key: 'name', name: 'Name', editable: true },\n    { key: 'type', name: 'Type', editable: true },\n    { key: 'timing', name: 'Timing', editable: true },\n    { key: 'target', name: 'Target', editable: true }\n  ];\n\n  const [list, setList] = useState([]);\n\n  useEffect(()=>{\n    fetch('http://localhost:3000/workouts')\n      .then(response => response.json())\n      .then(setList);\n  }, []);\n\n\n\n\n\n  const onEditComplete = useCallback(({ value, columnId, rowIndex }) => {\n    console.log({value});\n  });\n\n\n  return (\n    <div className=\"ExerciseGrid\">\n         <DataGrid \n          columns={columns} \n          rows={list} \n          onEditComplete={ onEditComplete(props) }\n          editable={true}\n        />\n    </div>\n  );\n}\n\nexport default ExerciseGrid;\n"]},"metadata":{},"sourceType":"module"}