{"ast":null,"code":"var _jsxFileName = \"/Users/rachel/workout-generator/src/components/WorkoutGenerator.js\",\n    _s = $RefreshSig$();\n\nimport { Route } from 'react-router-dom';\nimport { useEffect, useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, ResponsiveContext, Select, Text, TextInput } from 'grommet';\nimport { grommet } from 'grommet/themes';\nimport { deepMerge } from 'grommet/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction setWorkoutTypeInputOptions(optionss) {// console.log(optionss);\n}\n\nfunction WorkoutGenerator() {\n  _s();\n\n  let options = [\"Stretch\", \"Exercise\"];\n  let typeExercises = [];\n  let targetExercises = [];\n  const [workoutTypeInput, setWorkoutTypeInput] = useState('');\n  const [workoutTargetInput, setWorkoutTargetInput] = useState('');\n  const [workoutRepsInput, setWorkoutRepsInput] = useState('');\n  const [type, setType] = useState([]);\n  const [targets, setTarget] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3000/types').then(response => response.json()).then(setType);\n  }, []);\n  useEffect(() => {\n    fetch('http://localhost:3000/target').then(response => response.json()).then(setTarget);\n  }, []);\n  type.map((element, index) => {\n    return typeExercises[index] = element.name;\n  });\n  targets.map((element, index) => {\n    return targetExercises[index] = element.name;\n  });\n  const size = useContext(ResponsiveContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/list\",\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        size: \"large\",\n        children: \"\\u2699\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Generate Workout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      placeholder: \"Exercise Type\",\n      multiple: true,\n      closeOnChange: false,\n      options: options // onChange={({ value: nextValue }) => setValue(nextValue)}\n      // value={workoutTypeInput}\n      ,\n      onChange: event => setWorkoutTypeInput(event.value) // onChange={event => setWorkoutTypeInputOptions(event)}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      placeholder: \"Exercise Target\",\n      value: workoutTargetInput,\n      onSelect: event => setWorkoutTargetInput(event.suggestion),\n      suggestions: targetExercises\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      placeholder: \"Reps\",\n      value: workoutRepsInput,\n      onChange: event => setWorkoutRepsInput(event.target.value),\n      type: \"number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      render: ({\n        history\n      }) => /*#__PURE__*/_jsxDEV(Button, {\n        label: \"Start Workout\",\n        onClick: () => {\n          history.push({\n            pathname: '/start',\n            state: {\n              workoutType: workoutTypeInput,\n              workoutTarget: workoutTargetInput,\n              workoutReps: workoutRepsInput\n            }\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WorkoutGenerator, \"mPtrdfk12r68gz8OjzailV5w/10=\");\n\n_c = WorkoutGenerator;\nexport default WorkoutGenerator;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkoutGenerator\");","map":{"version":3,"sources":["/Users/rachel/workout-generator/src/components/WorkoutGenerator.js"],"names":["Route","useEffect","useState","useContext","Link","Button","ResponsiveContext","Select","Text","TextInput","grommet","deepMerge","setWorkoutTypeInputOptions","optionss","WorkoutGenerator","options","typeExercises","targetExercises","workoutTypeInput","setWorkoutTypeInput","workoutTargetInput","setWorkoutTargetInput","workoutRepsInput","setWorkoutRepsInput","type","setType","targets","setTarget","fetch","then","response","json","map","element","index","name","size","event","value","suggestion","target","history","push","pathname","state","workoutType","workoutTarget","workoutReps"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,kBAAtB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,MAAT,EAAiBC,iBAAjB,EAAoCC,MAApC,EAA4CC,IAA5C,EAAkDC,SAAlD,QAAmE,SAAnE;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,SAAT,QAA0B,eAA1B;;;AAGA,SAASC,0BAAT,CAAoCC,QAApC,EAA8C,CAC5C;AACD;;AAED,SAASC,gBAAT,GAA4B;AAAA;;AAE1B,MAAIC,OAAO,GAAG,CAAC,SAAD,EAAY,UAAZ,CAAd;AAEA,MAAIC,aAAa,GAAG,EAApB;AACA,MAAIC,eAAe,GAAG,EAAtB;AACA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CjB,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACkB,kBAAD,EAAqBC,qBAArB,IAA8CnB,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM,CAACoB,gBAAD,EAAmBC,mBAAnB,IAA0CrB,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACsB,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACwB,OAAD,EAAUC,SAAV,IAAuBzB,QAAQ,CAAC,EAAD,CAArC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACZ2B,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQJ,OAFR;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMAxB,EAAAA,SAAS,CAAC,MAAI;AACZ2B,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQF,SAFR;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMAH,EAAAA,IAAI,CAACQ,GAAL,CAAS,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC3B,WAAOlB,aAAa,CAACkB,KAAD,CAAb,GAAuBD,OAAO,CAACE,IAAtC;AACD,GAFD;AAIAT,EAAAA,OAAO,CAACM,GAAR,CAAY,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC9B,WAAOjB,eAAe,CAACiB,KAAD,CAAf,GAAyBD,OAAO,CAACE,IAAxC;AACD,GAFD;AAIA,QAAMC,IAAI,GAAGjC,UAAU,CAACG,iBAAD,CAAvB;AAGA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,OAAT;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAOE,QAAC,MAAD;AACE,MAAA,WAAW,EAAC,eADd;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,aAAa,EAAE,KAHjB;AAIE,MAAA,OAAO,EAAES,OAJX,CAKE;AACA;AANF;AAOE,MAAA,QAAQ,EAAEsB,KAAK,IAAIlB,mBAAmB,CAACkB,KAAK,CAACC,KAAP,CAPxC,CAQE;;AARF;AAAA;AAAA;AAAA;AAAA,YAPF,eAkBE,QAAC,SAAD;AACE,MAAA,WAAW,EAAC,iBADd;AAEE,MAAA,KAAK,EAAElB,kBAFT;AAGE,MAAA,QAAQ,EAAEiB,KAAK,IAAIhB,qBAAqB,CAACgB,KAAK,CAACE,UAAP,CAH1C;AAIE,MAAA,WAAW,EAAEtB;AAJf;AAAA;AAAA;AAAA;AAAA,YAlBF,eAyBE,QAAC,SAAD;AACE,MAAA,WAAW,EAAC,MADd;AAEE,MAAA,KAAK,EAAEK,gBAFT;AAGE,MAAA,QAAQ,EAAEe,KAAK,IAAId,mBAAmB,CAACc,KAAK,CAACG,MAAN,CAAaF,KAAd,CAHxC;AAIE,MAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,YAzBF,eAgCE,QAAC,KAAD;AAAO,MAAA,MAAM,EAAE,CAAC;AAAEG,QAAAA;AAAF,OAAD,kBACb,QAAC,MAAD;AACE,QAAA,KAAK,EAAC,eADR;AAEE,QAAA,OAAO,EAAE,MAAM;AACXA,UAAAA,OAAO,CAACC,IAAR,CAAc;AACZC,YAAAA,QAAQ,EAAE,QADE;AAEZC,YAAAA,KAAK,EAAE;AACLC,cAAAA,WAAW,EAAE3B,gBADR;AAEL4B,cAAAA,aAAa,EAAE1B,kBAFV;AAGL2B,cAAAA,WAAW,EAAEzB;AAHR;AAFK,WAAd;AAOD;AAVL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAhCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmDD;;GAtFQR,gB;;KAAAA,gB;AAwFT,eAAeA,gBAAf","sourcesContent":["import { Route } from 'react-router-dom'\nimport { useEffect, useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, ResponsiveContext, Select, Text, TextInput } from 'grommet';\nimport { grommet } from 'grommet/themes';\nimport { deepMerge } from 'grommet/utils';\n\n\nfunction setWorkoutTypeInputOptions(optionss) {\n  // console.log(optionss);\n}\n\nfunction WorkoutGenerator() {\n\n  let options = [\"Stretch\", \"Exercise\"];\n\n  let typeExercises = [];\n  let targetExercises = [];\n  const [workoutTypeInput, setWorkoutTypeInput] = useState('');\n  const [workoutTargetInput, setWorkoutTargetInput] = useState('');\n  const [workoutRepsInput, setWorkoutRepsInput] = useState('');\n  const [type, setType] = useState([]);\n  const [targets, setTarget] = useState([]);\n\n  useEffect(()=>{\n    fetch('http://localhost:3000/types')\n      .then(response => response.json())\n      .then(setType);\n  }, []);\n\n  useEffect(()=>{\n    fetch('http://localhost:3000/target')\n      .then(response => response.json())\n      .then(setTarget);\n  }, []);\n  \n  type.map((element, index) => {\n    return typeExercises[index] = element.name;\n  });  \n  \n  targets.map((element, index) => {\n    return targetExercises[index] = element.name;\n  });\n\n  const size = useContext(ResponsiveContext);\n\n\n  return (\n    <div>\n      <Link to='/list'>\n        <Text size=\"large\">âš™</Text>\n      </Link>  \n\n      <h1>Generate Workout</h1>\n      \n      <Select\n        placeholder=\"Exercise Type\"\n        multiple\n        closeOnChange={false}\n        options={options}\n        // onChange={({ value: nextValue }) => setValue(nextValue)}\n        // value={workoutTypeInput}\n        onChange={event => setWorkoutTypeInput(event.value)}\n        // onChange={event => setWorkoutTypeInputOptions(event)}\n      />       \n\n      <TextInput\n        placeholder=\"Exercise Target\"\n        value={workoutTargetInput}\n        onSelect={event => setWorkoutTargetInput(event.suggestion)}\n        suggestions={targetExercises}\n      />\n\n      <TextInput \n        placeholder=\"Reps\" \n        value={workoutRepsInput}\n        onChange={event => setWorkoutRepsInput(event.target.value)}\n        type=\"number\"\n      />\n\n      <Route render={({ history }) => (\n        <Button\n          label=\"Start Workout\" \n          onClick={() => { \n              history.push( {\n                pathname: '/start',\n                state: { \n                  workoutType: workoutTypeInput, \n                  workoutTarget: workoutTargetInput, \n                  workoutReps: workoutRepsInput }\n              });\n            }} >\n          </Button>\n        )} \n      />\n\n    </div>\n  );\n}\n\nexport default WorkoutGenerator;"]},"metadata":{},"sourceType":"module"}