{"ast":null,"code":"var _jsxFileName = \"/Users/rachel/workout-generator/src/components/ExerciseList.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Exercise from './Exercise.js';\nimport AddWorkout from './AddWorkout.js';\nimport { Link } from 'react-router-dom';\nimport { Box, Grid, Header, Nav, Table, TableBody, TableCell, TableHeader, TableRow, Text } from 'grommet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExerciseList() {\n  _s();\n\n  let typeExercises = [];\n  let targetExercises = [];\n  const [type, setType] = useState([]);\n  const [targets, setTarget] = useState([]);\n  let [urlUpdated, setUrlUpdated] = useState('');\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3000/types').then(response => response.json()).then(setType);\n  }, []);\n  useEffect(() => {\n    fetch('http://localhost:3000/target').then(response => response.json()).then(setTarget);\n  }, []);\n  useEffect(() => {\n    fetch('http://localhost:3000/workouts').then(response => response.json()).then(setList);\n  }, [urlUpdated]);\n  type.map((element, index) => {\n    return typeExercises[index] = element.name;\n  });\n  targets.map((element, index) => {\n    return targetExercises[index] = element.name;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      align: \"end\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/workout\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          size: \"xlarge\",\n          children: \"\\u2302\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      pad: {\n        left: 'small',\n        bottom: 'medium'\n      },\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        size: \"large\",\n        children: \"Exercise List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        size: \"xlarge\",\n        width: \"full\",\n        children: [/*#__PURE__*/_jsxDEV(TableHeader, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                size: \"medium\" // weight=\"800\"\n                ,\n                children: \"Exercise Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                size: \"medium\" // weight=\"800\"\n                ,\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                size: \"medium\" // weight=\"800\"\n                ,\n                children: \"Target\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                size: \"medium\" // weight=\"800\"\n                ,\n                children: \"Timing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: list.map(item => /*#__PURE__*/_jsxDEV(Exercise, {\n            id: item.id,\n            name: item.name,\n            type: item.type,\n            timing: item.timing,\n            target: item.target,\n            setUrlUpdated: setUrlUpdated\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddWorkout, {\n      setUrlUpdated: setUrlUpdated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExerciseList, \"lejoYC31jAjadiLW7vwqFiGgS34=\");\n\n_c = ExerciseList;\nexport default ExerciseList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExerciseList\");","map":{"version":3,"sources":["/Users/rachel/workout-generator/src/components/ExerciseList.js"],"names":["useEffect","useState","Exercise","AddWorkout","Link","Box","Grid","Header","Nav","Table","TableBody","TableCell","TableHeader","TableRow","Text","ExerciseList","typeExercises","targetExercises","type","setType","targets","setTarget","urlUpdated","setUrlUpdated","list","setList","fetch","then","response","json","map","element","index","name","left","bottom","item","id","timing","target"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport Exercise from './Exercise.js';\nimport AddWorkout from './AddWorkout.js';\nimport { Link } from 'react-router-dom';\nimport { Box, Grid, Header, Nav, Table, TableBody, TableCell, TableHeader, TableRow, Text } from 'grommet';\n\nfunction ExerciseList() {\n\n  let typeExercises = [];\n  let targetExercises = [];\n  const [type, setType] = useState([]);\n  const [targets, setTarget] = useState([]);\n  let [urlUpdated, setUrlUpdated] = useState('');\n  const [list, setList] = useState([]);\n\n  useEffect(()=>{\n    fetch('http://localhost:3000/types')\n      .then(response => response.json())\n      .then(setType);\n  }, []);\n\n  useEffect(()=>{\n    fetch('http://localhost:3000/target')\n      .then(response => response.json())\n      .then(setTarget);\n  }, []);\n\n  useEffect(()=>{\n    fetch('http://localhost:3000/workouts')\n      .then(response => response.json())\n      .then(setList);\n  }, [urlUpdated]);\n\n  type.map((element, index) => {\n    return typeExercises[index] = element.name;\n  });  \n  \n  targets.map((element, index) => {\n    return targetExercises[index] = element.name;\n  });\n\n  return (\n    <div>\n\n      <Box align='end'>\n        <Link to='/workout'>\n          <Text size=\"xlarge\">⌂</Text>\n        </Link>\n      </Box> \n    \n      <Box pad={{left: 'small', bottom: 'medium'}} >\n        <Text size=\"large\" >\n            Exercise List\n        </Text>\n      </Box>\n\n      <Box>\n          <Table\n            size=\"xlarge\"\n            width=\"full\"\n          >\n            <TableHeader>\n              <TableRow>\n                <TableCell>\n                  <Text\n                    size=\"medium\"\n                    // weight=\"800\"\n                  >\n                    Exercise Name\n                  </Text>\n                </TableCell>\n                <TableCell>\n                  <Text\n                    size=\"medium\"\n                    // weight=\"800\"\n                  >\n                    Type\n                  </Text>\n                </TableCell>\n                <TableCell>\n                  <Text\n                    size=\"medium\"\n                    // weight=\"800\"\n                  >\n                    Target\n                  </Text>\n                </TableCell>\n                <TableCell>\n                  <Text\n                    size=\"medium\"\n                    // weight=\"800\"\n                  >\n                    Timing\n                  </Text>\n                </TableCell>\n                <TableCell></TableCell>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {list.map(item =>\n                <Exercise \n                  key={ item.id }\n                  id={ item.id } \n                  name={ item.name } \n                  type={ item.type } \n                  timing={ item.timing } \n                  target={ item.target } \n                  setUrlUpdated = { setUrlUpdated }\n                />\n              )}\n            </TableBody>\n          </Table>\n      </Box>\n        <AddWorkout setUrlUpdated = { setUrlUpdated } />\n      <Box>\n       \n\n      </Box>      \n      \n    </div>\n  );\n}\n\nexport default ExerciseList;\n"]},"metadata":{},"sourceType":"module"}