{"ast":null,"code":"var _jsxFileName = \"/Users/rachel/workout-generator/src/components/WorkoutGenerator.js\",\n    _s = $RefreshSig$();\n\nimport { Route } from 'react-router-dom';\nimport { useEffect, useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Box, Button as GrommetButton, Grid, Grommet, Header, Nav, ResponsiveContext, Select, Text, TextInput } from 'grommet';\nimport { grommet } from 'grommet/themes';\nimport { deepMerge } from 'grommet/utils';\nimport './WorkoutGenerator.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customTheme = deepMerge(grommet, {\n  select: {\n    extend: () => `\n      font-size: 40px;\n      color: red;\n    `\n  }\n});\n\nfunction setWorkoutTypeInputOptions(optionss) {// console.log(optionss);\n}\n\nfunction WorkoutGenerator() {\n  _s();\n\n  let options = [\"Stretch\", \"Exercise\"];\n  let typeExercises = [];\n  let targetExercises = [];\n  const [workoutTypeInput, setWorkoutTypeInput] = useState('');\n  const [workoutTargetInput, setWorkoutTargetInput] = useState('');\n  const [workoutRepsInput, setWorkoutRepsInput] = useState('');\n  const [type, setType] = useState([]);\n  const [targets, setTarget] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3000/types').then(response => response.json()).then(setType);\n  }, []);\n  useEffect(() => {\n    fetch('http://localhost:3000/target').then(response => response.json()).then(setTarget);\n  }, []);\n  type.map((element, index) => {\n    return typeExercises[index] = element.name;\n  });\n  targets.map((element, index) => {\n    return targetExercises[index] = element.name;\n  });\n  const size = useContext(ResponsiveContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"workout-generator\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      justify: \"end\",\n      children: /*#__PURE__*/_jsxDEV(Nav, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/list\",\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            size: \"large\",\n            children: \"\\u2699\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"workout-generator-form\",\n      pad: \"xlarge\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        size: \"xlarge\",\n        textAlign: \"center\",\n        margin: \"large\",\n        children: \"Generate Workout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        className: \"workout-select\",\n        fill: true,\n        columns: ['medium', 'medium', 'xsmall', 'small'],\n        justifyContent: \"center\",\n        gap: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          theme: customTheme,\n          placeholder: \"Exercise Type\",\n          multiple: true,\n          closeOnChange: false,\n          options: options,\n          onChange: event => setWorkoutTypeInput(event.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          placeholder: \"Exercise Target\",\n          border: {\n            color: 'dark-3',\n            size: 'xsmall',\n            style: 'solid',\n            side: 'bottom'\n          },\n          options: [\"One\", \"Two\", \"Three\"],\n          onChange: event => setWorkoutTargetInput(event.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n          dropProps: {\n            height: 'small'\n          },\n          className: \"workout-input\",\n          placeholder: \"Reps\",\n          value: workoutRepsInput,\n          onChange: event => setWorkoutRepsInput(event.target.value),\n          type: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          render: ({\n            history\n          }) => /*#__PURE__*/_jsxDEV(GrommetButton, {\n            label: \"Start Workout\",\n            onClick: () => {\n              history.push({\n                pathname: '/start',\n                state: {\n                  workoutType: workoutTypeInput,\n                  workoutTarget: workoutTargetInput,\n                  workoutReps: workoutRepsInput\n                }\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WorkoutGenerator, \"mPtrdfk12r68gz8OjzailV5w/10=\");\n\n_c = WorkoutGenerator;\nexport default WorkoutGenerator;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkoutGenerator\");","map":{"version":3,"sources":["/Users/rachel/workout-generator/src/components/WorkoutGenerator.js"],"names":["Route","useEffect","useState","useContext","Link","Box","Button","GrommetButton","Grid","Grommet","Header","Nav","ResponsiveContext","Select","Text","TextInput","grommet","deepMerge","customTheme","select","extend","setWorkoutTypeInputOptions","optionss","WorkoutGenerator","options","typeExercises","targetExercises","workoutTypeInput","setWorkoutTypeInput","workoutTargetInput","setWorkoutTargetInput","workoutRepsInput","setWorkoutRepsInput","type","setType","targets","setTarget","fetch","then","response","json","map","element","index","name","size","event","value","color","style","side","height","target","history","push","pathname","state","workoutType","workoutTarget","workoutReps"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,kBAAtB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,GAAT,EAAcC,MAAM,IAAIC,aAAxB,EAAuCC,IAAvC,EAA6CC,OAA7C,EAAsDC,MAAtD,EAA8DC,GAA9D,EAAmEC,iBAAnE,EAAsFC,MAAtF,EAA8FC,IAA9F,EAAoGC,SAApG,QAAqH,SAArH;AAEA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,SAAT,QAA0B,eAA1B;AAEA,OAAO,yBAAP;;AAEA,MAAMC,WAAW,GAAGD,SAAS,CAACD,OAAD,EAAU;AACrCG,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAE,MAAO;AACnB;AACA;AACA;AAJU;AAD6B,CAAV,CAA7B;;AASA,SAASC,0BAAT,CAAoCC,QAApC,EAA8C,CAC5C;AACD;;AAED,SAASC,gBAAT,GAA4B;AAAA;;AAE1B,MAAIC,OAAO,GAAG,CAAC,SAAD,EAAY,UAAZ,CAAd;AAEA,MAAIC,aAAa,GAAG,EAApB;AACA,MAAIC,eAAe,GAAG,EAAtB;AACA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0C1B,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAAC2B,kBAAD,EAAqBC,qBAArB,IAA8C5B,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM,CAAC6B,gBAAD,EAAmBC,mBAAnB,IAA0C9B,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAAC+B,IAAD,EAAOC,OAAP,IAAkBhC,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACiC,OAAD,EAAUC,SAAV,IAAuBlC,QAAQ,CAAC,EAAD,CAArC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACZoC,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQJ,OAFR;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMAjC,EAAAA,SAAS,CAAC,MAAI;AACZoC,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQF,SAFR;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMAH,EAAAA,IAAI,CAACQ,GAAL,CAAS,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC3B,WAAOlB,aAAa,CAACkB,KAAD,CAAb,GAAuBD,OAAO,CAACE,IAAtC;AACD,GAFD;AAIAT,EAAAA,OAAO,CAACM,GAAR,CAAY,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC9B,WAAOjB,eAAe,CAACiB,KAAD,CAAf,GAAyBD,OAAO,CAACE,IAAxC;AACD,GAFD;AAIA,QAAMC,IAAI,GAAG1C,UAAU,CAACS,iBAAD,CAAvB;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,KAAhB;AAAA,6BACE,QAAC,GAAD;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,OAAT;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,GAAD;AACE,MAAA,SAAS,EAAC,wBADZ;AAEE,MAAA,GAAG,EAAC,QAFN;AAAA,8BAGE,QAAC,IAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,QAFZ;AAGE,QAAA,MAAM,EAAC,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eASE,QAAC,IAAD;AACE,QAAA,SAAS,EAAC,gBADZ;AAEE,QAAA,IAAI,MAFN;AAGE,QAAA,OAAO,EAAE,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,EAA+B,OAA/B,CAHX;AAIE,QAAA,cAAc,EAAC,QAJjB;AAKE,QAAA,GAAG,EAAC,OALN;AAAA,gCAME,QAAC,MAAD;AACE,UAAA,KAAK,EAAEM,WADT;AAEE,UAAA,WAAW,EAAC,eAFd;AAGE,UAAA,QAAQ,MAHV;AAIE,UAAA,aAAa,EAAE,KAJjB;AAKE,UAAA,OAAO,EAAEM,OALX;AAME,UAAA,QAAQ,EAAEsB,KAAK,IAAIlB,mBAAmB,CAACkB,KAAK,CAACC,KAAP;AANxC;AAAA;AAAA;AAAA;AAAA,gBANF,eAcE,QAAC,MAAD;AACE,UAAA,WAAW,EAAC,iBADd;AAEE,UAAA,MAAM,EAAE;AACNC,YAAAA,KAAK,EAAE,QADD;AAENH,YAAAA,IAAI,EAAE,QAFA;AAGNI,YAAAA,KAAK,EAAE,OAHD;AAINC,YAAAA,IAAI,EAAE;AAJA,WAFV;AAQE,UAAA,OAAO,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,OAAf,CARX;AASE,UAAA,QAAQ,EAAEJ,KAAK,IAAIhB,qBAAqB,CAACgB,KAAK,CAACC,KAAP;AAT1C;AAAA;AAAA;AAAA;AAAA,gBAdF,eAyBE,QAAC,SAAD;AACE,UAAA,SAAS,EAAE;AAAEI,YAAAA,MAAM,EAAE;AAAV,WADb;AAEE,UAAA,SAAS,EAAC,eAFZ;AAGE,UAAA,WAAW,EAAC,MAHd;AAIE,UAAA,KAAK,EAAEpB,gBAJT;AAKE,UAAA,QAAQ,EAAEe,KAAK,IAAId,mBAAmB,CAACc,KAAK,CAACM,MAAN,CAAaL,KAAd,CALxC;AAME,UAAA,IAAI,EAAC;AANP;AAAA;AAAA;AAAA;AAAA,gBAzBF,eAiCE,QAAC,KAAD;AAAO,UAAA,MAAM,EAAE,CAAC;AAAEM,YAAAA;AAAF,WAAD,kBACb,QAAC,aAAD;AACE,YAAA,KAAK,EAAC,eADR;AAEE,YAAA,OAAO,EAAE,MAAM;AACXA,cAAAA,OAAO,CAACC,IAAR,CAAc;AACZC,gBAAAA,QAAQ,EAAE,QADE;AAEZC,gBAAAA,KAAK,EAAE;AACLC,kBAAAA,WAAW,EAAE9B,gBADR;AAEL+B,kBAAAA,aAAa,EAAE7B,kBAFV;AAGL8B,kBAAAA,WAAW,EAAE5B;AAHR;AAFK,eAAd;AAOD;AAVL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAjCF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsED;;GAzGQR,gB;;KAAAA,gB;AA2GT,eAAeA,gBAAf","sourcesContent":["import { Route } from 'react-router-dom'\nimport { useEffect, useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Box, Button as GrommetButton, Grid, Grommet, Header, Nav, ResponsiveContext, Select, Text, TextInput } from 'grommet';\n\nimport { grommet } from 'grommet/themes';\nimport { deepMerge } from 'grommet/utils';\n\nimport './WorkoutGenerator.scss';\n\nconst customTheme = deepMerge(grommet, {\n  select: {\n    extend: () => `\n      font-size: 40px;\n      color: red;\n    `,\n  },\n});\n\nfunction setWorkoutTypeInputOptions(optionss) {\n  // console.log(optionss);\n}\n\nfunction WorkoutGenerator() {\n\n  let options = [\"Stretch\", \"Exercise\"];\n\n  let typeExercises = [];\n  let targetExercises = [];\n  const [workoutTypeInput, setWorkoutTypeInput] = useState('');\n  const [workoutTargetInput, setWorkoutTargetInput] = useState('');\n  const [workoutRepsInput, setWorkoutRepsInput] = useState('');\n  const [type, setType] = useState([]);\n  const [targets, setTarget] = useState([]);\n\n  useEffect(()=>{\n    fetch('http://localhost:3000/types')\n      .then(response => response.json())\n      .then(setType);\n  }, []);\n\n  useEffect(()=>{\n    fetch('http://localhost:3000/target')\n      .then(response => response.json())\n      .then(setTarget);\n  }, []);\n  \n  type.map((element, index) => {\n    return typeExercises[index] = element.name;\n  });  \n  \n  targets.map((element, index) => {\n    return targetExercises[index] = element.name;\n  });\n\n  const size = useContext(ResponsiveContext);\n\n\n  return (\n    <div className=\"workout-generator\">\n      <Header justify=\"end\">\n        <Nav>\n          <Link to='/list'>\n            <Text size=\"large\">⚙</Text>\n          </Link>\n        </Nav>\n      </Header>      \n      <Box \n        className=\"workout-generator-form\"\n        pad=\"xlarge\" >\n        <Text\n          size=\"xlarge\"\n          textAlign=\"center\"\n          margin=\"large\" >\n          Generate Workout\n        </Text>\n        <Grid\n          className=\"workout-select\"\n          fill\n          columns={['medium', 'medium', 'xsmall', 'small']}\n          justifyContent=\"center\"\n          gap=\"small\" >\n          <Select\n            theme={customTheme}\n            placeholder=\"Exercise Type\"\n            multiple\n            closeOnChange={false}\n            options={options}\n            onChange={event => setWorkoutTypeInput(event.value)}\n          />            \n          <Select\n            placeholder=\"Exercise Target\"\n            border={{\n              color: 'dark-3',\n              size: 'xsmall',\n              style: 'solid',\n              side: 'bottom',\n            }}\n            options={[\"One\", \"Two\", \"Three\"]}\n            onChange={event => setWorkoutTargetInput(event.value)}\n          />        \n          <TextInput \n            dropProps={{ height: 'small' }}\n            className=\"workout-input\"\n            placeholder=\"Reps\" \n            value={workoutRepsInput}\n            onChange={event => setWorkoutRepsInput(event.target.value)}\n            type=\"number\"\n          />\n          <Route render={({ history }) => (\n            <GrommetButton\n              label=\"Start Workout\" \n              onClick={() => { \n                  history.push( {\n                    pathname: '/start',\n                    state: { \n                      workoutType: workoutTypeInput, \n                      workoutTarget: workoutTargetInput, \n                      workoutReps: workoutRepsInput }\n                  });\n                }} >\n              </GrommetButton>\n            )} \n          />\n        </Grid>\n      </Box>\n    </div>\n  );\n}\n\nexport default WorkoutGenerator;"]},"metadata":{},"sourceType":"module"}