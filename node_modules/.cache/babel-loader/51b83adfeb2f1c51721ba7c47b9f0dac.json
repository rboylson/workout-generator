{"ast":null,"code":"var _jsxFileName = \"/Users/rachel/workout-generator/src/components/ExerciseList.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Exercise from './Exercise.js';\nimport AddWorkout from './AddWorkout.js';\nimport { Box, Table, TableBody, TableCell, TableHeader, TableRow } from 'grommet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExerciseList() {\n  _s();\n\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3000/workouts').then(response => response.json()).then(setList);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exercise-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Exercise List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      align: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        fill: true,\n        columns: ['small', 'xsmall', 'small', 'xsmall', 'xsmall'],\n        rows: ['flex'],\n        gap: \"small\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          size: \"xlarge\",\n          width: \"full\",\n          children: [/*#__PURE__*/_jsxDEV(TableHeader, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Exercise Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Target\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Timing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: list.map(item => /*#__PURE__*/_jsxDEV(Exercise, {\n              id: item.id,\n              name: item.name,\n              type: item.type,\n              timing: item.timing,\n              target: item.target\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(AddWorkout, {\n        list: list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExerciseList, \"ZBNfaudzy8bVxb8UgkyyMnLdlWY=\");\n\n_c = ExerciseList;\nexport default ExerciseList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExerciseList\");","map":{"version":3,"sources":["/Users/rachel/workout-generator/src/components/ExerciseList.js"],"names":["useEffect","useState","Exercise","AddWorkout","Box","Table","TableBody","TableCell","TableHeader","TableRow","ExerciseList","list","setList","fetch","then","response","json","map","item","id","name","type","timing","target"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,SAASC,GAAT,EAAcC,KAAd,EAAqBC,SAArB,EAAgCC,SAAhC,EAA2CC,WAA3C,EAAwDC,QAAxD,QAAwE,SAAxE;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AAEtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACAD,EAAAA,SAAS,CAAC,MAAI;AACZa,IAAAA,KAAK,CAAC,gCAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQF,OAFR;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,GAAD;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,IAAI,MADN;AAEE,QAAA,OAAO,EAAE,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,EAA6B,QAA7B,EAAuC,QAAvC,CAFX;AAGE,QAAA,IAAI,EAAE,CAAC,MAAD,CAHR;AAIE,QAAA,GAAG,EAAC,OAJN;AAAA,+BAME,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,KAAK,EAAC,MAFR;AAAA,kCAIE,QAAC,WAAD;AAAA,mCACE,QAAC,QAAD;AAAA,sCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,eAIE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,eAKE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF,eAaE,QAAC,SAAD;AAAA,sBACGD,IAAI,CAACM,GAAL,CAASC,IAAI,iBACZ,QAAC,QAAD;AAEE,cAAA,EAAE,EAAGA,IAAI,CAACC,EAFZ;AAGE,cAAA,IAAI,EAAGD,IAAI,CAACE,IAHd;AAIE,cAAA,IAAI,EAAGF,IAAI,CAACG,IAJd;AAKE,cAAA,MAAM,EAAGH,IAAI,CAACI,MALhB;AAME,cAAA,MAAM,EAAGJ,IAAI,CAACK;AANhB,eACQL,IAAI,CAACC,EADb;AAAA;AAAA;AAAA;AAAA,oBADD;AADH;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAqCE,QAAC,GAAD;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,IAAI,EAAGR;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YArCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8CD;;GAvDQD,Y;;KAAAA,Y;AAyDT,eAAeA,YAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport Exercise from './Exercise.js';\nimport AddWorkout from './AddWorkout.js';\nimport { Box, Table, TableBody, TableCell, TableHeader, TableRow } from 'grommet';\n\nfunction ExerciseList() {\n\n  const [list, setList] = useState([]);\n  useEffect(()=>{\n    fetch('http://localhost:3000/workouts')\n      .then(response => response.json())\n      .then(setList);\n  }, []);\n\n  return (\n    <div className=\"exercise-list\">\n      <h2>Exercise List</h2>\n      <Box align=\"center\">\n        <Grid\n          fill\n          columns={['small', 'xsmall', 'small', 'xsmall', 'xsmall']}\n          rows={['flex']}\n          gap=\"small\"\n        >\n          <Table\n            size=\"xlarge\"\n            width=\"full\"\n          >\n            <TableHeader>\n              <TableRow>\n                <TableCell>Exercise Name</TableCell>\n                <TableCell>Type</TableCell>\n                <TableCell>Target</TableCell>\n                <TableCell>Timing</TableCell>\n                <TableCell></TableCell>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {list.map(item =>\n                <Exercise \n                  key={ item.id }\n                  id={ item.id } \n                  name={ item.name } \n                  type={ item.type } \n                  timing={ item.timing } \n                  target={ item.target } \n                />\n              )}\n            </TableBody>\n          </Table>\n          </Grid>\n      </Box>\n      <Box>\n        <AddWorkout list={ list } />\n      </Box>\n\n      \n      \n    </div>\n  );\n}\n\nexport default ExerciseList;\n"]},"metadata":{},"sourceType":"module"}