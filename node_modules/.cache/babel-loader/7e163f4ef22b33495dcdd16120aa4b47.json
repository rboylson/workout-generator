{"ast":null,"code":"var _jsxFileName = \"/Users/rachel/workout-generator/src/components/AddWorkout.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Button as GrommetButton, TextInput } from 'grommet';\nimport './AddWorkout.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst onChange = () => {};\n\nfunction addExerciseToList(exerciseNameInput, exerciseTypeInput, exerciseTargetInput, exerciseTimingInput) {\n  console.log(exerciseNameInput, exerciseTypeInput, exerciseTargetInput, exerciseTimingInput);\n}\n\nfunction AddWorkout(props) {\n  _s();\n\n  function refreshPage() {\n    window.location.reload(false);\n  }\n\n  const [type, setType] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3000/types').then(response => response.json()).then(setType);\n  }, []);\n  const [targets, setTarget] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3000/target').then(response => response.json()).then(setTarget);\n  }, []);\n  const typeExercises = [\"Stretch\", \"Exercise\"];\n  const targetExercises = [\"Arms\", \"Legs\", \"Core\"];\n  const [exerciseNameInput, setExerciseNameInput] = useState('');\n  const [exerciseTypeInput, setExerciseTypeInput] = useState('');\n  const [exerciseTargetInput, setExerciseTargetInput] = useState('');\n  const [exerciseTimingInput, setExerciseTimingInput] = useState('');\n  console.log(exerciseNameInput + \" \" + exerciseTypeInput + \" \" + exerciseTargetInput + \" \" + exerciseTimingInput);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Exercise\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n      name: \"formframe\",\n      id: \"formframe\",\n      title: \"formframe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"input\",\n      autoComplete: \"off\",\n      action: \"http://localhost:3000/workouts\",\n      method: \"POST\",\n      target: \"formframe\",\n      onSubmit: () => refreshPage(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        className: \"inputName\",\n        name: \"name\",\n        placeholder: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"type\",\n        className: \"inputType\",\n        name: \"type\",\n        children: type.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.name,\n          children: item.name\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"target\",\n        className: \"inputTarget\",\n        name: \"target\",\n        children: targets.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.name,\n          children: item.name\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"timing\",\n        className: \"inputTiming\",\n        name: \"timing\",\n        placeholder: \"Timing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"inputSubmit\",\n        value: \"Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-workout-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(TextInput, {\n          placeholder: \"Exercise Name\",\n          value: exerciseNameInput,\n          onChange: event => setExerciseNameInput(event.target.value),\n          className: \"add-workout-cell\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n          placeholder: \"Exercise Type\",\n          value: exerciseTypeInput,\n          onSelect: event => setExerciseTypeInput(event.suggestion),\n          suggestions: typeExercises,\n          className: \"add-workout-cell\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n          placeholder: \"Exercise Target\",\n          value: exerciseTargetInput,\n          onSelect: event => setExerciseTargetInput(event.suggestion),\n          suggestions: targetExercises,\n          className: \"add-workout-cell\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n          placeholder: \"Timing\",\n          value: exerciseTimingInput,\n          onChange: event => setExerciseTimingInput(event.target.value),\n          className: \"add-workout-cell\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GrommetButton, {\n          label: \"Add Exercise\",\n          onClick: () => addExerciseToList(exerciseNameInput, exerciseTypeInput, exerciseTargetInput, exerciseTimingInput)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddWorkout, \"V5nfCplyVOITKomu0kjMMLjQxi8=\");\n\n_c = AddWorkout;\nexport default AddWorkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddWorkout\");","map":{"version":3,"sources":["/Users/rachel/workout-generator/src/components/AddWorkout.js"],"names":["useEffect","useState","Button","GrommetButton","TextInput","onChange","addExerciseToList","exerciseNameInput","exerciseTypeInput","exerciseTargetInput","exerciseTimingInput","console","log","AddWorkout","props","refreshPage","window","location","reload","type","setType","fetch","then","response","json","targets","setTarget","typeExercises","targetExercises","setExerciseNameInput","setExerciseTypeInput","setExerciseTargetInput","setExerciseTimingInput","map","item","name","id","event","target","value","suggestion"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Button as GrommetButton, TextInput } from 'grommet';\nimport './AddWorkout.scss';\n\n\nconst onChange = () => {\n}\n\nfunction addExerciseToList(exerciseNameInput, exerciseTypeInput, exerciseTargetInput, exerciseTimingInput) {\n  console.log(exerciseNameInput, exerciseTypeInput, exerciseTargetInput, exerciseTimingInput);\n}\n\nfunction AddWorkout( props ) {  \n  function refreshPage() {\n    window.location.reload(false);\n  }\n\n  const [type, setType] = useState([]);\n  useEffect(()=>{\n    fetch('http://localhost:3000/types')\n      .then(response => response.json())\n      .then(setType);\n  }, []);\n\n  const [targets, setTarget] = useState([]);\n  useEffect(()=>{\n    fetch('http://localhost:3000/target')\n      .then(response => response.json())\n      .then(setTarget);\n  }, []);\n\n  const typeExercises = [\"Stretch\", \"Exercise\"];\n  const targetExercises = [\"Arms\", \"Legs\", \"Core\"];\n\n  const [exerciseNameInput, setExerciseNameInput] = useState('');\n  const [exerciseTypeInput, setExerciseTypeInput] = useState('');\n  const [exerciseTargetInput, setExerciseTargetInput] = useState('');\n  const [exerciseTimingInput, setExerciseTimingInput] = useState('');\n\n  console.log(exerciseNameInput + \" \" + exerciseTypeInput + \" \" + exerciseTargetInput + \" \" + exerciseTimingInput);\n\n  return (\n    <div>\n      <h2>Add Exercise</h2>\n      <iframe name=\"formframe\" id=\"formframe\" title=\"formframe\"></iframe>\n      <form id=\"input\" autoComplete=\"off\" action=\"http://localhost:3000/workouts\" method=\"POST\" target=\"formframe\" onSubmit={() => refreshPage()}>\n        <input type=\"text\" id=\"name\" className=\"inputName\" name=\"name\" placeholder=\"Name\" />\n        <select id=\"type\"className=\"inputType\"  name=\"type\">\n          {type.map(item =>\n            <option key={item.id} value={item.name}>{item.name}</option>\n          )}\n        </select>\n        <select id=\"target\" className=\"inputTarget\" name=\"target\">\n          {targets.map(item =>\n            <option key={item.id} value={item.name}>{item.name}</option>\n          )}\n        </select>\n        <input type=\"text\" id=\"timing\" className=\"inputTiming\" name=\"timing\" placeholder=\"Timing\" />\n        <input type=\"submit\" className=\"inputSubmit\" value=\"Test\" />\n\n        <div className=\"add-workout-wrapper\">\n          <TextInput \n            placeholder=\"Exercise Name\" \n            value={exerciseNameInput}\n            onChange={event => setExerciseNameInput(event.target.value)}\n            className=\"add-workout-cell\"\n          />\n          <TextInput\n            placeholder=\"Exercise Type\"\n            value={exerciseTypeInput}\n            onSelect={event => setExerciseTypeInput(event.suggestion)}\n            suggestions={typeExercises}\n            className=\"add-workout-cell\"\n          />        \n          <TextInput\n            placeholder=\"Exercise Target\"\n            value={exerciseTargetInput}\n            onSelect={event => setExerciseTargetInput(event.suggestion)}\n            suggestions={targetExercises}\n            className=\"add-workout-cell\"\n          />\n          <TextInput \n            placeholder=\"Timing\" \n            value={exerciseTimingInput}\n            onChange={event => setExerciseTimingInput(event.target.value)}\n            className=\"add-workout-cell\" \n          />\n          <GrommetButton \n            label=\"Add Exercise\" \n            onClick={() => addExerciseToList(exerciseNameInput, exerciseTypeInput, exerciseTargetInput, exerciseTimingInput)} \n          />\n        </div>\n\n      </form> \n    </div>\n  );\n}\n\nexport default AddWorkout;\n"]},"metadata":{},"sourceType":"module"}