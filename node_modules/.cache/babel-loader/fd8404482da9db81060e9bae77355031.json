{"ast":null,"code":"var _jsxFileName = \"/Users/rachel/workout-generator/src/components/AddWorkout.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddWorkout(props) {\n  _s();\n\n  function refreshPage() {\n    window.location.reload(false);\n  }\n\n  const [type, setType] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3000/types').then(response => response.json()).then(setType);\n  }, []);\n  const [targets, setTarget] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3000/target').then(response => response.json()).then(setTarget);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Exercise\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n      name: \"formframe\",\n      id: \"formframe\",\n      title: \"formframe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"input\",\n      autoComplete: \"off\",\n      action: \"http://localhost:3000/workouts\",\n      method: \"POST\",\n      target: \"formframe\",\n      onSubmit: () => refreshPage(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        className: \"inputName\",\n        name: \"name\",\n        placeholder: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"type\",\n        className: \"inputType\",\n        name: \"type\",\n        children: type.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.name,\n          children: item.name\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"target\",\n        className: \"inputTarget\",\n        name: \"target\",\n        children: targets.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.name,\n          children: item.name\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"timing\",\n        className: \"inputTiming\",\n        name: \"timing\",\n        placeholder: \"Timing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"inputSubmit\",\n        placeholder: \"Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddWorkout, \"Z42eTa+zSGzvLsupVP/c9zURCuQ=\");\n\n_c = AddWorkout;\nexport default AddWorkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddWorkout\");","map":{"version":3,"sources":["/Users/rachel/workout-generator/src/components/AddWorkout.js"],"names":["useEffect","useState","AddWorkout","props","refreshPage","window","location","reload","type","setType","fetch","then","response","json","targets","setTarget","map","item","name","id"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\n\nfunction AddWorkout( props ) {  \n  function refreshPage() {\n    window.location.reload(false);\n  }\n\n  const [type, setType] = useState([]);\n  useEffect(()=>{\n    fetch('http://localhost:3000/types')\n      .then(response => response.json())\n      .then(setType);\n  }, []);\n\n  const [targets, setTarget] = useState([]);\n  useEffect(()=>{\n    fetch('http://localhost:3000/target')\n      .then(response => response.json())\n      .then(setTarget);\n  }, []);\n\n  return (\n    <div>\n      <h2>Add Exercise</h2>\n      <iframe name=\"formframe\" id=\"formframe\" title=\"formframe\"></iframe>\n      <form id=\"input\" autoComplete=\"off\" action=\"http://localhost:3000/workouts\" method=\"POST\" target=\"formframe\" onSubmit={() => refreshPage()}>\n        <input type=\"text\" id=\"name\" className=\"inputName\" name=\"name\" placeholder=\"Name\" />\n        <select id=\"type\"className=\"inputType\"  name=\"type\">\n          {type.map(item =>\n            <option key={item.id} value={item.name}>{item.name}</option>\n          )}\n        </select>\n        <select id=\"target\" className=\"inputTarget\" name=\"target\">\n          {targets.map(item =>\n            <option key={item.id} value={item.name}>{item.name}</option>\n          )}\n        </select>\n        <input type=\"text\" id=\"timing\" className=\"inputTiming\" name=\"timing\" placeholder=\"Timing\" />\n        <input type=\"submit\" className=\"inputSubmit\" placeholder=\"Test\" />\n      </form> \n    </div>\n  );\n}\n\nexport default AddWorkout;\n"]},"metadata":{},"sourceType":"module"}