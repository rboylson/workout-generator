{"ast":null,"code":"var _jsxFileName = \"/Users/rachel/workout-generator/src/components/ExerciseList.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Exercise from './Exercise.js';\nimport AddWorkout from './AddWorkout.js';\nimport './ExerciseList.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExerciseList() {\n  _s();\n\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3000/workouts').then(response => response.json()).then(setList);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exercise-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Exercise List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      align: \"center\",\n      pad: \"large\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHeader, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Exercise Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Target\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Timing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: data.map(datum => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(c => /*#__PURE__*/_jsxDEV(TableCell, {\n              scope: c.dataScope,\n              align: c.align,\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                children: c.format ? c.format(datum) : datum[c.property]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 21\n              }, this)\n            }, c.property, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 19\n            }, this))\n          }, datum.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableFooter, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(c => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: c.align,\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                children: c.footer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this)\n            }, c.property, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Target\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Timing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), list.map(item => /*#__PURE__*/_jsxDEV(Exercise, {\n          id: item.id,\n          name: item.name,\n          type: item.type,\n          timing: item.timing,\n          target: item.target\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddWorkout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExerciseList, \"ZBNfaudzy8bVxb8UgkyyMnLdlWY=\");\n\n_c = ExerciseList;\nexport default ExerciseList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExerciseList\");","map":{"version":3,"sources":["/Users/rachel/workout-generator/src/components/ExerciseList.js"],"names":["useEffect","useState","Exercise","AddWorkout","ExerciseList","list","setList","fetch","then","response","json","data","map","datum","columns","c","dataScope","align","format","property","id","footer","item","name","type","timing","target"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport Exercise from './Exercise.js';\nimport AddWorkout from './AddWorkout.js';\nimport './ExerciseList.scss';\n\nfunction ExerciseList() {\n\n  const [list, setList] = useState([]);\n  useEffect(()=>{\n    fetch('http://localhost:3000/workouts')\n      .then(response => response.json())\n      .then(setList);\n  }, []);\n\n  return (\n    <div className=\"exercise-list\">\n      <h2>Exercise List</h2>\n      <Box align=\"center\" pad=\"large\">\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableCell>Exercise Name</TableCell>\n              <TableCell>Type</TableCell>\n              <TableCell>Target</TableCell>\n              <TableCell>Timing</TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {data.map(datum => (\n              <TableRow key={datum.id}>\n                {columns.map(c => (\n                  <TableCell key={c.property} scope={c.dataScope} align={c.align}>\n                    <Text>{c.format ? c.format(datum) : datum[c.property]}</Text>\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              {columns.map(c => (\n                <TableCell key={c.property} align={c.align}>\n                  <Text>{c.footer}</Text>\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </Box>\n      <table>\n        <tbody>\n          <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Target</th>\n            <th>Timing</th>\n          </tr>\n          {list.map(item =>\n            <Exercise \n              key={ item.id }\n              id={ item.id } \n              name={ item.name } \n              type={ item.type } \n              timing={ item.timing } \n              target={ item.target } \n            />)}\n          </tbody>\n        </table>\n        <AddWorkout />\n    </div>\n  );\n}\n\nexport default ExerciseList;\n"]},"metadata":{},"sourceType":"module"}