{"ast":null,"code":"var _jsxFileName = \"/Users/rachel/workout-generator/src/components/Workout.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './Workout.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet checkedArray = [];\n\nfunction workoutChecked(workoutId) {\n  console.log(checkedArray.indexOf(workoutId));\n\n  if (checkedArray.indexOf(workoutId) == -1) {\n    checkedArray.push(workoutId);\n  }\n\n  if (checkedArray.length == workoutArray.length) {\n    console.log(\"complete!\");\n  }\n}\n\nfunction Workout(props) {\n  _s();\n\n  console.log(\"rendered\");\n  const {\n    state\n  } = useLocation();\n  const {\n    workoutType,\n    workoutTarget,\n    workoutReps\n  } = state;\n  const [query, setQuery] = useState([]);\n  const [workoutArray, setWorkoutArray] = useState([]);\n  let url = `http://localhost:3000/workouts?type=${workoutType}&target=${workoutTarget}`;\n  useEffect(() => {\n    fetch(url).then(response => response.json()).then(setQuery);\n  }, [url]);\n\n  for (var j = 0; j < query.length; j++) {\n    workoutArray[j] = { ...query[j],\n      \"count\": \"0\"\n    };\n  }\n\n  for (var i = 0; i < workoutReps; i++) {\n    let randomNumber = Math.floor(Math.random() * workoutArray.length);\n\n    if (workoutArray[randomNumber] != null) {\n      workoutArray[randomNumber].count++;\n    }\n  }\n\n  let WorkoutList = () => {\n    setWorkoutArray(workoutArray);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: workoutArray.map(item => {\n        if (item) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"workout-list-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [item.name, \" : \", item.timing, \" : \", item.count]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"checkboxWorkout\",\n              id: item.id,\n              name: item.id,\n              value: item.id,\n              onClick: () => workoutChecked(item.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(WorkoutList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Workout, \"YbPtbFMPR/If1ClnqE8nMNIqEjk=\", false, function () {\n  return [useLocation];\n});\n\n_c = Workout;\nexport default Workout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Workout\");","map":{"version":3,"sources":["/Users/rachel/workout-generator/src/components/Workout.js"],"names":["useEffect","useState","useLocation","checkedArray","workoutChecked","workoutId","console","log","indexOf","push","length","workoutArray","Workout","props","state","workoutType","workoutTarget","workoutReps","query","setQuery","setWorkoutArray","url","fetch","then","response","json","j","i","randomNumber","Math","floor","random","count","WorkoutList","map","item","name","timing","id"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './Workout.scss';\n\nlet checkedArray = [];\n\nfunction workoutChecked(workoutId) {\n  console.log(checkedArray.indexOf(workoutId));\n  if(checkedArray.indexOf(workoutId) == -1 ) {\n    checkedArray.push(workoutId);\n  }\n\n  if (checkedArray.length == workoutArray.length) {\n    console.log(\"complete!\");\n  }\n}\n\n\nfunction Workout( props ) {\n  console.log(\"rendered\");\n\n  const {state} = useLocation();\n  const {workoutType, workoutTarget, workoutReps } = state;\n  const [query, setQuery] = useState([]);\n  const [workoutArray, setWorkoutArray] = useState([]);\n  \n  let url = `http://localhost:3000/workouts?type=${workoutType}&target=${workoutTarget}`;\n  useEffect(()=>{\n    fetch(url)\n      .then(response => response.json())\n      .then(setQuery);\n  }, [url]);\n\n  for (var j = 0; j < query.length; j++) {\n    workoutArray[j] = {...query[j], \"count\": \"0\"};\n  }\n\n  for (var i = 0; i < workoutReps; i++) {\n    let randomNumber = Math.floor(Math.random() * (workoutArray.length));\n    if (workoutArray[randomNumber] != null) {\n      workoutArray[randomNumber].count++;\n    }\n  } \n\n\n  let WorkoutList = () => { \n    setWorkoutArray(workoutArray);\n    return (\n      <div>\n        {\n          workoutArray.map((item) => {\n            if (item) {\n              return (\n                <div className=\"workout-list-item\">\n                  <label>{item.name} : {item.timing} : {item.count}</label>\n                  <input type=\"checkbox\" className=\"checkboxWorkout\" id={item.id} name={item.id} value={item.id} \n                  onClick={() => workoutChecked(item.id)}/>\n                </div>\n              )\n            }\n          })\n        }\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <div>{ <WorkoutList /> }</div>\n    </div>\n  );\n}\n\nexport default Workout;\n"]},"metadata":{},"sourceType":"module"}