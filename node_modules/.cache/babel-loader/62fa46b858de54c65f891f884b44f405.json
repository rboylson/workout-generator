{"ast":null,"code":"var _jsxFileName = \"/Users/rachel/workout-generator/src/components/Workout.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Workout(props) {\n  _s();\n\n  const [query, setQuery] = useState([]);\n  const {\n    state\n  } = useLocation();\n  const {\n    workoutType,\n    workoutTarget,\n    workoutReps\n  } = state;\n  let url = `http://localhost:3000/workouts?type=${workoutType}&target=${workoutTarget}`;\n  useEffect(() => {\n    fetch(url).then(response => response.json()).then(setQuery);\n  }, [url]);\n  let workoutArray = [];\n\n  for (var i = 0; i < 10; i++) {\n    let randomNumber = 1; // Math.floor(Math.random() * 3 + 1);\n\n    workoutArray.push(query[randomNumber]);\n  }\n\n  console.log(workoutArray[0]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: workoutReps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: workoutArray.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: JSON.stringify(item[0].id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Workout, \"oJF5ZJJNeaLj0KnsCmBkX63j22o=\", false, function () {\n  return [useLocation];\n});\n\n_c = Workout;\nexport default Workout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Workout\");","map":{"version":3,"sources":["/Users/rachel/workout-generator/src/components/Workout.js"],"names":["useEffect","useState","useLocation","Workout","props","query","setQuery","state","workoutType","workoutTarget","workoutReps","url","fetch","then","response","json","workoutArray","i","randomNumber","push","console","log","map","item","JSON","stringify","id"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAGA,SAASC,OAAT,CAAkBC,KAAlB,EAA0B;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAACM,IAAAA;AAAD,MAAUL,WAAW,EAA3B;AACA,QAAM;AAACM,IAAAA,WAAD;AAAcC,IAAAA,aAAd;AAA6BC,IAAAA;AAA7B,MAA6CH,KAAnD;AAEA,MAAII,GAAG,GAAI,uCAAsCH,WAAY,WAAUC,aAAc,EAArF;AACAT,EAAAA,SAAS,CAAC,MAAI;AACZY,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQP,QAFR;AAGD,GAJQ,EAIN,CAACK,GAAD,CAJM,CAAT;AAOA,MAAIK,YAAY,GAAG,EAAnB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,QAAIC,YAAY,GAAG,CAAnB,CAD2B,CACL;;AACtBF,IAAAA,YAAY,CAACG,IAAb,CAAkBd,KAAK,CAACa,YAAD,CAAvB;AACD;;AAEDE,EAAAA,OAAO,CAACC,GAAR,CAAYL,YAAY,CAAC,CAAD,CAAxB;AAIA,sBACE;AAAA,4BACE;AAAA,gBAAKN;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGM,YAAY,CAACM,GAAb,CAAiBC,IAAI,IAAI;AACxB,4BAAO;AAAA,oBAAKC,IAAI,CAACC,SAAL,CAAeF,IAAI,CAAC,CAAD,CAAJ,CAAQG,EAAvB;AAAL;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAlCQvB,O;UAESD,W;;;KAFTC,O;AAoCT,eAAeA,OAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\n\nfunction Workout( props ) {\n  const [query, setQuery] = useState([]);\n  const {state} = useLocation();\n  const {workoutType, workoutTarget, workoutReps } = state;\n\n  let url = `http://localhost:3000/workouts?type=${workoutType}&target=${workoutTarget}`;\n  useEffect(()=>{\n    fetch(url)\n      .then(response => response.json())\n      .then(setQuery);\n  }, [url]);\n\n  \n  let workoutArray = [];\n\n  for (var i = 0; i < 10; i++) {\n    let randomNumber = 1; // Math.floor(Math.random() * 3 + 1);\n    workoutArray.push(query[randomNumber]);\n  }\n\n  console.log(workoutArray[0]);\n \n  \n\n  return (\n    <div>\n      <p>{ workoutReps }</p>\n      <ul>\n        {workoutArray.map(item => {\n          return <li>{JSON.stringify(item[0].id)}</li>;\n        })}\n      </ul>\n    </div>\n  );\n}\n\nexport default Workout;\n"]},"metadata":{},"sourceType":"module"}