{"ast":null,"code":"var _jsxFileName = \"/Users/rachel/workout-generator/src/components/ExerciseList.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Exercise from './Exercise.js';\nimport AddWorkout from './AddWorkout.js';\nimport { Box, Grid, Table, TableBody, TableCell, TableHeader, TableRow, Text } from 'grommet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExerciseList() {\n  _s();\n\n  let typeExercises = [];\n  let targetExercises = [];\n  const [type, setType] = useState([]);\n  const [targets, setTarget] = useState([]);\n  const [exerciseNameInput, setExerciseNameInput] = useState('');\n  const [exerciseTypeInput, setExerciseTypeInput] = useState('');\n  const [exerciseTargetInput, setExerciseTargetInput] = useState('');\n  const [exerciseTimingInput, setExerciseTimingInput] = useState('');\n  useEffect(() => {\n    fetch('http://localhost:3000/types').then(response => response.json()).then(setType);\n  }, []);\n  useEffect(() => {\n    fetch('http://localhost:3000/target').then(response => response.json()).then(setTarget);\n  }, []);\n  type.map((element, index) => {\n    return typeExercises[index] = element.name;\n  });\n  targets.map((element, index) => {\n    return targetExercises[index] = element.name;\n  });\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3000/workouts').then(response => response.json()).then(setList);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exercise-list\",\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      size: \"large\",\n      textAlign: \"center\",\n      children: \"Exercises\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      fill: true,\n      align: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        fill: true,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          size: \"xlarge\",\n          width: \"full\",\n          children: [/*#__PURE__*/_jsxDEV(TableHeader, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Text, {\n                  size: \"medium\" // weight=\"800\"\n                  ,\n                  children: \"Exercise Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Text, {\n                  size: \"medium\" // weight=\"800\"\n                  ,\n                  children: \"Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Text, {\n                  size: \"medium\" // weight=\"800\"\n                  ,\n                  children: \"Target\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Text, {\n                  size: \"medium\" // weight=\"800\"\n                  ,\n                  children: \"Timing\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: list.map(item => /*#__PURE__*/_jsxDEV(Exercise, {\n              id: item.id,\n              name: item.name,\n              type: item.type,\n              timing: item.timing,\n              target: item.target\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(AddWorkout, {\n        list: list,\n        setList: setList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExerciseList, \"M7Ud3SXu8Yl/rRCHTeypj4vSLSs=\");\n\n_c = ExerciseList;\nexport default ExerciseList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExerciseList\");","map":{"version":3,"sources":["/Users/rachel/workout-generator/src/components/ExerciseList.js"],"names":["useEffect","useState","Exercise","AddWorkout","Box","Grid","Table","TableBody","TableCell","TableHeader","TableRow","Text","ExerciseList","typeExercises","targetExercises","type","setType","targets","setTarget","exerciseNameInput","setExerciseNameInput","exerciseTypeInput","setExerciseTypeInput","exerciseTargetInput","setExerciseTargetInput","exerciseTimingInput","setExerciseTimingInput","fetch","then","response","json","map","element","index","name","list","setList","item","id","timing","target"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport Exercise from './Exercise.js';\nimport AddWorkout from './AddWorkout.js';\nimport { Box, Grid, Table, TableBody, TableCell, TableHeader, TableRow, Text } from 'grommet';\n\nfunction ExerciseList() {\n\n  let typeExercises = [];\n  let targetExercises = [];\n  const [type, setType] = useState([]);\n  const [targets, setTarget] = useState([]);\n  const [exerciseNameInput, setExerciseNameInput] = useState('');\n  const [exerciseTypeInput, setExerciseTypeInput] = useState('');\n  const [exerciseTargetInput, setExerciseTargetInput] = useState('');\n  const [exerciseTimingInput, setExerciseTimingInput] = useState('');\n\n  useEffect(()=>{\n    fetch('http://localhost:3000/types')\n      .then(response => response.json())\n      .then(setType);\n  }, []);\n\n  useEffect(()=>{\n    fetch('http://localhost:3000/target')\n      .then(response => response.json())\n      .then(setTarget);\n  }, []);\n  \n  type.map((element, index) => {\n    return typeExercises[index] = element.name;\n  });  \n  \n  targets.map((element, index) => {\n    return targetExercises[index] = element.name;\n  });\n\n  const [list, setList] = useState([]);\n  useEffect(()=>{\n    fetch('http://localhost:3000/workouts')\n      .then(response => response.json())\n      .then(setList);\n  }, []);\n\n  return (\n    <div className=\"exercise-list\">\n      <Text\n        size=\"large\"\n        textAlign=\"center\"\n      >\n        Exercises\n      </Text>\n      <Box fill align=\"center\">\n        <Grid\n          fill\n        >\n          <Table\n            size=\"xlarge\"\n            width=\"full\"\n          >\n            <TableHeader>\n              <TableRow>\n                <TableCell>\n                  <Text\n                    size=\"medium\"\n                    // weight=\"800\"\n                  >\n                    Exercise Name\n                  </Text>\n                </TableCell>\n                <TableCell>\n                  <Text\n                    size=\"medium\"\n                    // weight=\"800\"\n                  >\n                    Type\n                  </Text>\n                </TableCell>\n                <TableCell>\n                  <Text\n                    size=\"medium\"\n                    // weight=\"800\"\n                  >\n                    Target\n                  </Text>\n                </TableCell>\n                <TableCell>\n                  <Text\n                    size=\"medium\"\n                    // weight=\"800\"\n                  >\n                    Timing\n                  </Text>\n                </TableCell>\n                <TableCell></TableCell>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {list.map(item =>\n                <Exercise \n                  key={ item.id }\n                  id={ item.id } \n                  name={ item.name } \n                  type={ item.type } \n                  timing={ item.timing } \n                  target={ item.target } \n                />\n              )}\n            </TableBody>\n          </Table>\n        </Grid>\n      </Box>\n      <Box>\n        <AddWorkout list={ list } setList= { setList } />\n      </Box>\n\n      \n      \n    </div>\n  );\n}\n\nexport default ExerciseList;\n"]},"metadata":{},"sourceType":"module"}